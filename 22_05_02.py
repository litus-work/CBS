# –ó–∞–≤–¥–∞–Ω–Ω—è 2
class Contact:
    def __init__(self, surname: str, name: str, age: int, mob_phone: str, email: str):
        self.surname = surname
        self.name = name
        self.age = age
        self.mob_phone = mob_phone
        self.email = email

    def get_contact(self) -> str:
        return f"{self.name} {self.surname}, {self.mob_phone}"

    def send_message(self, message: str) -> None:
        print(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è {self.name}: {message}")


class UpdateContact(Contact):
    def __init__(self, surname: str, name: str, age: int, mob_phone: str, email: str, job: str):
        super().__init__(surname, name, age, mob_phone, email)
        self.job = job

    def get_message(self) -> str:
        return f"{self.name} {self.surname} –ø—Ä–∞—Ü—é—î —è–∫ {self.job}."


# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–∫–∑–µ–º–ø–ª—è—Ä—ñ–≤
c1 = Contact("–Ü–≤–∞–Ω–µ–Ω–∫–æ", "–Ü–≤–∞–Ω", 30, "+380501112233", "ivan@example.com")
c2 = UpdateContact("–ü–µ—Ç—Ä–µ–Ω–∫–æ", "–û–ª–µ–Ω–∞", 28, "+380671234567", "olena@example.com", "–¥–∏–∑–∞–π–Ω–µ—Ä")

# –î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –æ–±'—î–∫—Ç—ñ–≤
print("\n__dict__:")
print("Contact:", c1.__dict__)
print("UpdateContact:", c2.__dict__)

print("\n__base__:")
print("UpdateContact.__base__:", UpdateContact.__base__)

print("\n__bases__:")
print("UpdateContact.__bases__:", UpdateContact.__bases__)

# –ú–µ—Ç–æ–¥–∏
print("\n–ú–µ—Ç–æ–¥–∏:")
print("Contact: get_contact ->", c1.get_contact())
c1.send_message("–í—ñ—Ç–∞—î–º–æ —É —Å–∏—Å—Ç–µ–º—ñ!")

print("UpdateContact: get_contact ->", c2.get_contact())
print("UpdateContact: get_message ->", c2.get_message())
c2.send_message("–û–Ω–æ–≤–ª–µ–Ω–æ –≤–∞—à—É –≤–∞–∫–∞–Ω—Å—ñ—é.")

# –ó–∞–≤–¥–∞–Ω–Ω—è 3: hasattr, getattr, setattr, delattr
print("\n–ó–∞–≤–¥–∞–Ω–Ω—è 3: –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π introspection")

for attr in ["surname", "name", "age", "mob_phone", "email", "job"]:
    print(f"\n–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞—Ç—Ä–∏–±—É—Ç—É '{attr}' —É c2:")
    if hasattr(c2, attr):
        value = getattr(c2, attr)
        print(f"  ‚úì –Ñ –∞—Ç—Ä–∏–±—É—Ç '{attr}' –∑ –∑–Ω–∞—á–µ–Ω–Ω—è–º: {value}")
        setattr(c2, attr, "–ó–º—ñ–Ω–µ–Ω–æ")
        print(f"  ‚úèÔ∏è  –ù–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è '{attr}': {getattr(c2, attr)}")
        delattr(c2, attr)
        print(f"  üóëÔ∏è  –ê—Ç—Ä–∏–±—É—Ç '{attr}' –≤–∏–¥–∞–ª–µ–Ω–æ.")
        print("  ‚úì –ß–∏ —ñ—Å–Ω—É—î —Ç–µ–ø–µ—Ä:", hasattr(c2, attr))
    else:
        print(f"  ‚úó –ê—Ç—Ä–∏–±—É—Ç '{attr}' –≤—ñ–¥—Å—É—Ç–Ω—ñ–π")

# –ó–∞–≤–¥–∞–Ω–Ω—è 4: isinstance() —Ç–∞ issubclass()
print("\n–ó–∞–≤–¥–∞–Ω–Ω—è 4: isinstance() —Ç–∞ issubclass()")

# new_instances
contact_1 = Contact("–ö–æ–≤–∞–ª—å", "–ú–∞—Ä—ñ—è", 34, "+380501234567", "maria@example.com")
contact_2 = Contact("–®–µ–≤—á–µ–Ω–∫–æ", "–ê–Ω–¥—Ä—ñ–π", 41, "+380631234567", "andrii@example.com")
update_contact_1 = UpdateContact("–ë–æ–Ω–¥–∞—Ä", "–û–∫—Å–∞–Ω–∞", 29, "+380991112233", "oksana@example.com", "–º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥")
update_contact_2 = UpdateContact("–¢–∫–∞—á–µ–Ω–∫–æ", "–Æ—Ä—ñ–π", 36, "+380671234567", "yurii@example.com", "—ñ–Ω–∂–µ–Ω–µ—Ä")

# isinstance
for obj in [contact_1, contact_2, update_contact_1, update_contact_2]:
    print(f"\n–û–±'—î–∫—Ç {obj.__class__.__name__}:")
    print("  isinstance Contact:", isinstance(obj, Contact))
    print("  isinstance UpdateContact:", isinstance(obj, UpdateContact))

# issubclass
print("\n–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è:")
print("issubclass(UpdateContact, Contact):", issubclass(UpdateContact, Contact))
print("issubclass(Contact, UpdateContact):", issubclass(Contact, UpdateContact))
